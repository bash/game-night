{% extends 'base' %}

{% block title %}Profile{% endblock title %}

{% block content %}
<form method="post">
    <p>
        Hi, my name is
        {% if can_update_name %}
        <input type="text" class="-inline" placeholder="Name" name="name" value="{{user.name}}" required autocomplete="name" size="15">
        {% else %}
        <input type="text" class="-inline" value="{{user.name}}" size="15" disabled>
        {% endif %}
        and <br>
        my email address is
        <input type="email" class="-inline" value="{{user.email_address}}" disabled>.
    </p>

    {% if symbols %}
    <fieldset>
        The following symbol is my avatar:

        <div class="symbol-picker">
            {% for symbol in symbols %}
                <label class="symbol">
                    <span class="label">{{symbol}}</span>
                    <input type="radio" name="symbol" value="{{symbol}}" {% if symbol == user.symbol %}checked{% endif %} autocomplete="off">
                </label>
            {% endfor %}
        </div>
    </fieldset>
    {% endif %}

    <p>
        Please
        <select class="-inline" name="subscribe" id="subscription">
            <option value="on">send</option>
            <option value="off">do not send</option>
        </select>
        me emails about <em>Tau's Game Night</em><span data-visible-if="subscription=on"><template>.</template></span>

        <span data-visible-if="subscription=off">
            <template>
                until
                <select class="-inline" id="permanence">
                    <option value="temporary">after the following day</option>
                    <option value="permanent">I turn them on again</option>
                </select>

                <span data-visible-if="permanence=temporary">
                    <template>
                        : <input type="date" name="until" class="-inline" required>
                    </template>
                </span>
                .
            </template>
        </span>
    </p>

    <fieldset class="-actions">
        <button type="submit">Save my details</button>
        {% if list_users_uri %}
            <a href="{{list_users_uri}}" class="link-button">Show me the list of users, please</a>
        {% endif %}
    </fieldset>

    <p>
        <strong>P.S.</strong> You can always <a href="{{delete_profile_uri}}">delete your profile</a>
        if you no longer wish to participate in <em>Tau's Game Night</em>.
    </p>
</form>
<form method="post" action="/web-push/subscribe">
    <input type="hidden" name="endpoint">
    <input type="hidden" name="auth">
    <input type="hidden" name="p256dh">
    <button type="button" data-web-push-subscribe-button>Subscribe</button>
</form>

<script type="module">
    const webPushKey = {{push_key | json_encode | safe}}
    const button = document.querySelector('[data-web-push-subscribe-button]')
    const form = button.form
    const endpointField = form.querySelector('[name="endpoint"]')
    const authField = form.querySelector('[name="auth"]')
    const p256dhField = form.querySelector('[name="p256dh"]')

    button.addEventListener('click', async () => {
        button.disabled = true
        const registration = await navigator.serviceWorker.ready
        const subscription = await registration.pushManager.subscribe({ userVisibleOnly: true, applicationServerKey: webPushKey })
        const { endpoint, keys: { auth, p256dh } } = subscription.toJSON()
        endpointField.value = endpoint
        authField.value = auth
        p256dhField.value = p256dh
        form.submit()
    })
</script>
{% endblock %}

{% block scripts %}
<script id="form-values" type="application/json">
    {% if user.email_subscription.type == 'permanently_unsubscribed' %}{% set permanence = 'permanent' %}
    {% else %}{% set permanence = 'temporary' %}{% endif %}

    {% if user.email_subscription.type == 'subscribed' %}{% set subscription = 'on' %}
    {% else %}{% set subscription = 'off' %}{% endif %}

    { "subscription": {{ subscription | json_encode | safe }}
    , "permanence": {{ permanence | json_encode | safe }}
    , "until": {{ user.email_subscription.until | default(value='') | json_encode | safe }}
    }</script>
<script>
    let formValues = JSON.parse(document.getElementById('form-values').innerText)

    function bindRequiredAndVisibleTo(scope) {
        for (const target of scope.querySelectorAll('[data-visible-if]')) {
            const [sourceId, sourceValue] = target.dataset.visibleIf.split('=')
            const source = document.getElementById(sourceId)
            const template = target.querySelector(':scope > template')

            const update = () => {
                const visible = source.value == sourceValue
                if (visible && !target.hasAttribute('data-visible')) {
                    target.setAttribute('data-visible', '')
                    target.append(template.content.cloneNode(true))
                    fillFormValues(target)
                    bindRequiredAndVisibleTo(target)
                }
                if (!visible) {
                    target.removeAttribute('data-visible', '')
                    target.replaceChildren(template)
                }
            }
            update()
            source.addEventListener('input', () => update())
        }
    }

    function fillFormValues(scope) {
        if (formValues) {
            for (const [name, value] of Object.entries(formValues)) {
                const field = document.getElementsByName(name)[0] || document.getElementById(name)
                if (field != null) { field.value = value }
            }
        }
    }

    fillFormValues(document)
    bindRequiredAndVisibleTo(document)
    formValues = null
</script>
<script type="module" src="{{asset(path='/js/open-modal.js')}}"></script>
{% endblock scripts %}
