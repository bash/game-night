:disabled {
    opacity: .5;
    pointer-events: none;
}

fieldset {
    display: grid;
    justify-items: start;
    margin-bottom: var(--inter-block-gap-with-line-height-compensation);

    input[type=text],
    input[type=email],
    textarea,
    select {
        justify-self: stretch;
    }

    button,
    .link-button {
        margin-bottom: .5rem;
    }

    &.-actions {
        margin-top: calc(var(--inter-block-gap) * 2);
    }

    &.-two-column {
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;

        @media (max-width: 500px) {
            grid-template-columns: 100%;
        }
    }
}

button {
    @extend a;
    cursor: pointer;
}

button, .link-button {
    &:not(.-icon)::before {
        content: 'â†’ ';
        font-family: var(--sans-serif);
    }

    &.-icon {
        display: inline-flex;
        align-items: center;
        grid-gap: 4px;

        > svg {
            display: inline;
            width: 1em;
            height: 1em;
        }
    }
}

input[type=text],
input[type=email],
input[type=number],
textarea,
select {
    font-weight: bold;
    text-align: center;
    border-bottom: 4px dashed currentColor;
    --vertical-padding: 8px;
    --horizontal-padding: 20px;
    padding: var(--vertical-padding) var(--horizontal-padding);

    @media (prefers-contrast: more) {
        border-radius: 6px;
        border: 2px dashed currentColor;
    }

    &:focus-visible {
        outline: none;
        border-color: var(--accent-color);

        @media (prefers-contrast: more) {
            border: 2px solid currentColor;
            outline: 1px solid currentColor;
        }
    }

    &:not([size]) {
        min-width: 0;
    }

    &.-inline {
        --vertical-padding: 0px; // The unit is important here so that the max() function understands that this is a length value
        --horizontal-padding: 0px;
        background-color: transparent;
        border-width: 2px;
        margin: 4px 0;
    }

    background-color: color-mix(in srgb, var(--accent-color), #fff 90%);

    @media (prefers-color-scheme: dark) {
        background-color: color-mix(in srgb, var(--accent-color), #000 85%);
    }
}

input[type=number] {
    appearance: textfield;
    letter-spacing: 0.25em;
}

// Desktop Safari still styles <select>s in a weird glossy
// style. appearance: none resets everything so we need to re-add the arrow.
select {
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;

    --caret-width: .5em;
    --caret-offset: max(4px, var(--horizontal-padding));
    --caret-to-text-padding: max(4px, calc(var(--caret-offset) / 2));

    // Source for the SVG trick: https://stackoverflow.com/a/57510283/6827589
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='130' fill='%23000'><polygon points='50,0 0,50 100,50'/><polygon points='0,80 100,80 50,130'/></svg>");
    background-repeat: no-repeat;
    background-size: var(--caret-width);
    background-position: right var(--caret-offset) center;
    padding-right: calc(var(--caret-offset) + var(--caret-to-text-padding) + var(--caret-width));

    @media (prefers-color-scheme: dark) {
        background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='130' fill='%23FFF'><polygon points='50,0 0,50 100,50'/><polygon points='0,80 100,80 50,130'/></svg>");
    }
}

textarea {
    resize: vertical;
    aspect-ratio: 16 / 9;
    text-align: left;
    --vertical-padding: var(--horizontal-padding);
}

.logout-form {
    display: grid;
    grid-template-columns: auto auto;
    justify-content: start;
    align-items: center;
    gap: 1rem;
}

@import 'form/_time';
